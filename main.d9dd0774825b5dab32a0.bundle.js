(()=>{"use strict";var t,e={73:(t,e,s)=>{var i,h,a=s(260),r=s.n(a);!function(t){t.LOADING="LoadingScene",t.MENU="MenuScene",t.GAME="GameScene",t.PAUSE="PauseScene",t.SETTING="SettingScene",t.GAMEOVER="GameOverScene"}(i||(i={})),function(t){t.Devonshire_Waltz_Allegretto="Devonshire Waltz Allegretto"}(h||(h={}));class n{static init(t){n.music=t.sound.add(h.Devonshire_Waltz_Allegretto),n.music.volume=.5}static setVolume(t){t<0&&(t=0),t>1&&(t=1),n.music.setVolume(t)}static play(){n.music.play()}static stop(){n.music.stop()}static pause(){n.music.pause()}static resume(){n.music.resume()}static update(){n.music.isPlaying||n.play()}static getVolume(){return n.music.volume}}class o extends Phaser.GameObjects.Rectangle{constructor(t){super(t.scene,t.x,t.y,t.width,t.height,t.color,t.alpha),this.scene.add.existing(this),t.color&&(this.color1=t.color),t.hoverColor&&(this.color2=t.hoverColor),this.setInteractive(),this.on("pointerdown",(()=>this.handlePointerDown())),this.on("pointerup",(()=>this.handlePointerUp())),this.on("pointerover",(()=>this.handlePointerOver())),this.on("pointerout",(()=>this.handlePointerOut())),this.text=this.scene.add.text(t.x,t.y,"Button",{fontFamily:"Cambria",fontSize:"32px",color:"#000000",fontStyle:"bold"}).setOrigin(.5,.5)}handlePointerDown(){this.fillColor=this.color2,this.pointerDownCallBack&&this.pointerDownCallBack()}handlePointerUp(){this.fillColor=this.color1}handlePointerOver(){this.fillColor=this.color2}handlePointerOut(){this.fillColor=this.color1}setContent(t){return this.text.setText(t),this}setTextColor(t){return this.text.setColor(t),this}setTextSize(t){return this.text.setFontSize(t),this}setFunction(t){return this.pointerDownCallBack=t,this}setPos(t,e){return this.setPosition(t,e),this.text.setPosition(t,e),this}}class l extends Phaser.Scene{constructor(){super({key:i.GAMEOVER}),this.bitmapTexts=[]}init(t){this.score=t.score}create(){const t=this.sys.canvas.width/2,e=this.sys.canvas.height/2;this.add.rectangle(0,0,2*t,2*e,1193046).setOrigin(0,0),this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2,this.sys.canvas.height/2-200,"font","GAME OVER",100).setOrigin(.5,.5)),new o({scene:this,x:t,y:e-100,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Restart").setTextSize(50).setFunction((()=>{this.scene.transition({target:i.GAME,duration:500,moveBelow:!0,onUpdate:e=>{this.cameras.main.scrollX=2*t*e}})})),new o({scene:this,x:t,y:e,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Setting").setTextSize(50).setFunction((()=>{this.scene.start(i.SETTING)})),new o({scene:this,x:t,y:e+100,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Exit").setTextSize(50).setFunction((()=>{this.scene.start(i.MENU)})),n.stop()}}class c extends Phaser.GameObjects.Image{constructor(t){super(t.scene,t.x,t.y,t.texture),this.rotation=t.rotation,this.initImage(),this.scene.add.existing(this)}initImage(){this.bulletSpeed=1e3,this.setOrigin(.5,.5),this.setDepth(2),this.scene.physics.world.enable(this),this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,this.bulletSpeed,this.body.velocity)}update(){}}class d extends Phaser.GameObjects.Image{getBullets(){return this.bullets}constructor(t){super(t.scene,t.x,t.y,t.texture,t.frame),this.initImage(),this.scene.add.existing(this)}initImage(){this.health=1,this.lastShoot=0,this.speed=100,this.setOrigin(.5,.5),this.setDepth(0),this.angle=180,this.barrel=this.scene.add.image(this.x,this.y,"barrelBlue"),this.barrel.setOrigin(.5,1),this.barrel.setDepth(1),this.barrel.angle=180,this.lifeBar=this.scene.add.graphics(),this.redrawLifebar(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),this.scene.input.keyboard?(this.cursors=this.scene.input.keyboard.createCursorKeys(),this.rotateKeyLeft=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),this.rotateKeyRight=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D),this.shootingKey=this.scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)):console.log("No input keyboard!!!!!!!!!"),this.scene.physics.world.enable(this)}update(){this.active?(this.barrel.x=this.x,this.barrel.y=this.y,this.lifeBar.x=this.x,this.lifeBar.y=this.y,this.handleInput(),this.handleShooting()):(this.destroy(),this.barrel.destroy(),this.lifeBar.destroy())}handleInput(){this.cursors.up.isDown?this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,this.speed,this.body.velocity):this.cursors.down.isDown?this.scene.physics.velocityFromRotation(this.rotation-Math.PI/2,-this.speed,this.body.velocity):this.body.setVelocity(0,0),this.cursors.left.isDown?this.rotation-=.02:this.cursors.right.isDown&&(this.rotation+=.02),this.rotateKeyLeft.isDown?this.barrel.rotation-=.05:this.rotateKeyRight.isDown&&(this.barrel.rotation+=.05)}handleShooting(){this.shootingKey.isDown&&this.scene.time.now>this.lastShoot&&(this.scene.cameras.main.shake(20,.005),this.scene.tweens.add({targets:this,props:{alpha:.8},delay:0,duration:5,ease:"Power1",easeParams:null,hold:0,repeat:0,repeatDelay:0,yoyo:!0,paused:!1}),this.bullets.getLength()<10&&(this.bullets.add(new c({scene:this.scene,rotation:this.barrel.rotation,x:this.barrel.x,y:this.barrel.y,texture:"bulletBlue"})),this.lastShoot=this.scene.time.now+80))}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-this.width/2,this.height/2,this.width*this.health,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-this.width/2,this.height/2,this.width,15),this.lifeBar.setDepth(1)}updateHealth(){if(this.health>0)this.redrawLifebar();else{this.health=0,this.active=!1;const t=this.scene;this.scene.scene.start(i.GAMEOVER,{score:t.score})}}}class u extends Phaser.GameObjects.Image{getBarrel(){return this.barrel}getBullets(){return this.bullets}constructor(t){super(t.scene,t.x,t.y,t.texture,t.frame),this.initContainer(),this.scene.add.existing(this)}initContainer(){this.health=1,this.lastShoot=0,this.speed=100,this.setDepth(0),this.barrel=this.scene.add.image(0,0,"barrelRed"),this.barrel.setOrigin(.5,1),this.barrel.setDepth(1),this.lifeBar=this.scene.add.graphics(),this.redrawLifebar(),this.bullets=this.scene.add.group({active:!0,maxSize:10,runChildUpdate:!0}),this.scene.tweens.add({targets:this,props:{y:this.y-200},delay:0,duration:2e3,ease:"Linear",easeParams:null,hold:0,repeat:-1,repeatDelay:0,yoyo:!0}),this.scene.physics.world.enable(this)}update(){this.active?(this.barrel.x=this.x,this.barrel.y=this.y,this.lifeBar.x=this.x,this.lifeBar.y=this.y,this.handleShooting()):(this.destroy(),this.barrel.destroy(),this.lifeBar.destroy())}handleShooting(){this.scene.time.now>this.lastShoot&&this.bullets.getLength()<10&&(this.bullets.add(new c({scene:this.scene,rotation:this.barrel.rotation,x:this.barrel.x,y:this.barrel.y,texture:"bulletRed"})),this.lastShoot=this.scene.time.now+400)}redrawLifebar(){this.lifeBar.clear(),this.lifeBar.fillStyle(15100456,1),this.lifeBar.fillRect(-this.width/2,this.height/2,this.width*this.health,15),this.lifeBar.lineStyle(2,16777215),this.lifeBar.strokeRect(-this.width/2,this.height/2,this.width,15),this.lifeBar.setDepth(1)}updateHealth(){this.health>0?(this.health-=.05,this.redrawLifebar()):(this.health=0,this.active=!1)}}class y extends Phaser.GameObjects.Image{constructor(t){super(t.scene,t.x,t.y,t.texture),this.initImage(),this.scene.add.existing(this)}initImage(){this.setOrigin(0,0),this.scene.physics.world.enable(this),this.body.setImmovable(!0)}update(){}}class p extends Phaser.Scene{constructor(){super({key:i.GAME})}init(){}create(){const t=this.sys.canvas.width/2;this.map=this.make.tilemap({key:"levelMap"}),this.tileset=this.map.addTilesetImage("tiles"),this.layer=this.map.createLayer("tileLayer",this.tileset,0,0),console.log(this.layer),this.layer.setCollisionByProperty({collide:!0}),this.obstacles=this.add.group({runChildUpdate:!0}),this.enemies=this.add.group({}),this.convertObjects(),this.physics.add.collider(this.player,this.layer),this.physics.add.collider(this.player,this.obstacles),this.physics.add.collider(this.player.getBullets(),this.layer,this.bulletHitLayer,void 0,this),this.physics.add.collider(this.player.getBullets(),this.obstacles,this.bulletHitObstacles,void 0,this),this.enemies.children.each((t=>{const e=t;return this.physics.add.overlap(this.player.getBullets(),e,this.playerBulletHitEnemy,void 0,this),this.physics.add.overlap(e.getBullets(),this.player,this.enemyBulletHitPlayer,void 0),this.physics.add.collider(e.getBullets(),this.obstacles,this.bulletHitObstacles,void 0),this.physics.add.collider(e.getBullets(),this.layer,this.bulletHitLayer,void 0),null}),this),this.pauseBtn=new o({scene:this,x:2*t-30,y:30,width:60,height:60,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("||").setTextSize(40).setFunction((()=>{this.scene.pause(i.GAME),this.scene.launch(i.PAUSE)})),n.play(),this.score=0}update(){this.player.update(),this.enemies.children.each((t=>{const e=t;if(e.update(),this.player.active&&e.active){const t=Phaser.Math.Angle.Between(e.body.x,e.body.y,this.player.body.x,this.player.body.y);e.getBarrel().angle=(t+Math.PI/2)*Phaser.Math.RAD_TO_DEG}return null}),this),n.update();let t=this.player.body.x-this.cameras.main.width/2,e=this.player.body.y-this.cameras.main.height/2;t<0&&(t=0),e<0&&(e=0),t>this.layer.width-this.cameras.main.width&&(t=this.layer.width-this.cameras.main.width),e>this.layer.height-this.cameras.main.height&&(e=this.layer.height-this.cameras.main.height),this.cameras.main.scrollX=t,this.cameras.main.scrollY=e,this.pauseBtn.setPos(t+this.cameras.main.width-30,e+30)}convertObjects(){const t=this.map.getObjectLayer("objects");t&&t.objects.forEach((t=>{if("player"===t.type)this.player=new d({scene:this,x:t.x,y:t.y,texture:"tankBlue"});else if("enemy"===t.type){const e=new u({scene:this,x:t.x,y:t.y,texture:"tankRed"});this.enemies.add(e)}else{const e=new y({scene:this,x:t.x,y:t.y-40,texture:t.type});this.obstacles.add(e)}}))}bulletHitLayer(t){t.destroy()}bulletHitObstacles(t,e){t.destroy()}enemyBulletHitPlayer(t,e){t.destroy(),e.updateHealth()}playerBulletHitEnemy(t,e){t.destroy(),e.updateHealth()}}class g extends Phaser.Scene{constructor(){super({key:i.LOADING})}preload(){this.cameras.main.setBackgroundColor(0),this.createLoadingGraphics(),this.load.on("progress",(t=>{this.progressBar.clear(),this.progressBar.fillStyle(8971347,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*t,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload")}create(){n.init(this)}update(){this.scene.start(i.MENU)}createLoadingGraphics(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(16777215,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}class m extends Phaser.Scene{constructor(){super({key:i.MENU}),this.bitmapTexts=[]}create(){const t=this.sys.canvas.width/2,e=this.sys.canvas.height/2;this.add.rectangle(0,0,2*t,2*e,1193046).setOrigin(0,0),this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2,this.sys.canvas.height/2-200,"font","TANK",100).setOrigin(.5,.5)),new o({scene:this,x:t,y:e-100,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Start").setTextSize(50).setFunction((()=>{this.scene.transition({target:i.GAME,duration:500,moveBelow:!0,onUpdate:e=>{this.cameras.main.scrollX=2*t*e}})})),new o({scene:this,x:t,y:e,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Setting").setTextSize(50).setFunction((()=>{this.scene.start(i.SETTING)})),new o({scene:this,x:t,y:e+100,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Exit").setTextSize(50).setFunction((()=>{this.scene.start(i.MENU)})),n.stop()}}class b extends Phaser.Scene{constructor(){super({key:i.PAUSE})}create(){const t=this.sys.canvas.width/2,e=this.sys.canvas.height/2;this.add.rectangle(0,0,2*t,2*e,0,.5).setOrigin(0,0),this.add.bitmapText(t,e-200,"font","| |",100).setOrigin(.5,.5),new o({scene:this,x:t,y:e-100,width:250,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Continue").setTextSize(50).setFunction((()=>{this.scene.stop(i.PAUSE),this.scene.resume(i.GAME)})),new o({scene:this,x:t,y:e,width:250,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Restart").setTextSize(50).setFunction((()=>{this.scene.start(i.GAME)})),new o({scene:this,x:t,y:e+100,width:250,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Setting").setTextSize(50).setFunction((()=>{this.scene.start(i.SETTING)})),new o({scene:this,x:t,y:e+200,width:250,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Exit").setTextSize(50).setFunction((()=>{this.scene.start(i.MENU)}))}}class x extends Phaser.Scene{constructor(){super({key:i.SETTING})}create(){const t=this.sys.canvas.width/2,e=this.sys.canvas.height/2;this.add.rectangle(0,0,2*t,2*e,1193046).setOrigin(0,0),this.add.bitmapText(t,e-200,"font","SETTING",100).setOrigin(.5,.5);const s=this.add.text(t,e,`${Math.round(100*n.getVolume())}`,{fontFamily:"Cambria",fontSize:50,fontStyle:"bold"}).setOrigin(.5,.5);new o({scene:this,x:t-100,y:e,width:75,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("-").setTextSize(100).setFunction((()=>{n.setVolume(n.getVolume()-.1),s.setText(`${Math.round(100*n.getVolume())}`)})),new o({scene:this,x:t+100,y:e,width:75,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("+").setTextSize(100).setFunction((()=>{n.setVolume(n.getVolume()+.1),s.setText(`${Math.round(100*n.getVolume())}`)})),new o({scene:this,x:t,y:e+100,width:200,height:75,color:43115,hoverColor:3050327}).setOrigin(.5,.5).setContent("Exit").setTextSize(50).setFunction((()=>{this.scene.start(i.MENU)}))}}const w={title:"Tank",url:"https://github.com/leanhhuy0709/tank",version:"2.0",type:Phaser.AUTO,parent:"Game",scene:[g,m,p,b,x,l],input:{keyboard:!0},width:1600,height:1200,physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scale:{mode:Phaser.Scale.ScaleModes.FIT,autoCenter:Phaser.Scale.Center.CENTER_BOTH,resizeInterval:1},backgroundColor:"#123456s",render:{pixelArt:!1,antialias:!0}};class v extends r().Game{constructor(t){super(t)}}window.addEventListener("load",(()=>{new v(w)}))}},s={};function i(t){var h=s[t];if(void 0!==h)return h.exports;var a=s[t]={exports:{}};return e[t].call(a.exports,a,a.exports,i),a.exports}i.m=e,t=[],i.O=(e,s,h,a)=>{if(!s){var r=1/0;for(c=0;c<t.length;c++){for(var[s,h,a]=t[c],n=!0,o=0;o<s.length;o++)(!1&a||r>=a)&&Object.keys(i.O).every((t=>i.O[t](s[o])))?s.splice(o--,1):(n=!1,a<r&&(r=a));if(n){t.splice(c--,1);var l=h();void 0!==l&&(e=l)}}return e}a=a||0;for(var c=t.length;c>0&&t[c-1][2]>a;c--)t[c]=t[c-1];t[c]=[s,h,a]},i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={179:0};i.O.j=e=>0===t[e];var e=(e,s)=>{var h,a,[r,n,o]=s,l=0;if(r.some((e=>0!==t[e]))){for(h in n)i.o(n,h)&&(i.m[h]=n[h]);if(o)var c=o(i)}for(e&&e(s);l<r.length;l++)a=r[l],i.o(t,a)&&t[a]&&t[a][0](),t[a]=0;return i.O(c)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(e.bind(null,0)),s.push=e.bind(null,s.push.bind(s))})();var h=i.O(void 0,[216],(()=>i(73)));h=i.O(h)})();